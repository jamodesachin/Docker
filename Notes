install jq for logs --- sudo apt insall jq apt 
install net-tools install docker -- curl https://get.docker.com/ | bash
docker run --rm --name app:latest ----rm when container is stop it ps will delete.
docker network create myapp --driver bridge   (create a network)
docker run --rm -d --name app3 -p 8001 --network myapp kiran2361993/troubleshootingtools:v1   (image with all network troubleshooting)
docker image prune
docker system prune  You can combine cleanup commands (like for images, containers, and volumes) for a broader cleanup:
Container talks to host using Brideg network. It creates a virtual ethernet network that docker0.

arguments while building and env variable while running


To update portpolio on EC2.
sudo apt update && sudo apt install -y nginx: Updates the package list on the system and installs the nginx web server.

sudo apt update && sudo apt install certbot python3-certbot-nginx: Updates the package list on the system and installs Certbot, a tool for obtaining SSL certificates from Let's Encrypt, and the Certbot plugin for nginx.

sudo mkdir -p /var/www/pinapathrunisaikiran.co.in/html: Creates a directory structure to host the website files for the domain pinapathrunisaikiran.co.in.

sudo chown -R $USER:$USER /var/www/pinapathrunisaikiran.co.in/html: Changes the ownership of the directory to the current user.

sudo chmod -R 755 /var/www/pinapathrunisaikiran.co.in: Changes the permissions of the directory to allow read, write, and execute access for the owner and read and execute access for others.

nano /var/www/pinapathrunisaikiran.co.in/html/index.html: Opens a text editor (nano) to create/edit the HTML file for the website homepage. You will paste the provided HTML code into this file.

sudo nano /etc/nginx/sites-available/pinapathrunisaikiran.co.in: Opens a text editor to create/edit a server block configuration file for nginx for the domain pinapathrunisaikiran.co.in. You will paste the provided nginx configuration into this file.

sudo ln -s /etc/nginx/sites-available/pinapathrunisaikiran.co.in /etc/nginx/sites-enabled/: Creates a symbolic link from the server block configuration file in sites-available to sites-enabled, enabling the configuration for nginx to use.

sudo nginx -t: Tests the nginx configuration for any syntax errors.

sudo systemctl restart nginx: Restarts the nginx service to apply the new configuration changes.

sudo certbot certonly --agree-tos --email pinapathruni.saikiran@gmail.com --manual --preferred-challenges=dns -d .pinapathrunisaikiran.co.in --server https://acme-v02.api.letsencrypt.org/directory: Uses Certbot to obtain a SSL certificate from Let's Encrypt for the domain pinapathrunisaikiran.co.in and any subdomains (.pinapathrunisaikiran.co.in) using DNS verification.

After running these commands, you'll have a basic web server setup with nginx and a valid SSL certificate installed for the domain pinapathrunisaikiran.co.in.
